openapi: 3.0.3
info:
  title: IEC 63278-5 | HTTP/REST | Query language Service Specification
  description: "Temporary extensions to the IDTA OPenAPI specifications"
  contact:
    name: Industrial Digital Twin Association (IDTA)
    email: info@idtwin.org
  license:
    name: CC BY 4.0
    url: https://creativecommons.org/licenses/by/4.0/
  version: V3.1.1_SSP-999
  x-profile-identifier: https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-999
servers:
- url: https://admin-shell.io/api/v3/
- url: https://example.com/
paths:
  # Full example: https://big.aas-voyager.com/query/submodels?Limit=15
  /query/shells:
    post:
      tags:
      - Query API
      summary: Returns specific Asset Administration Shells with respect to provided query expression.
      operationId: GetAssetAdministrationShellsByQuery
      parameters:
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      requestBody:
        description: Query expression
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryExpression"
        required: true
      responses:
        "200":
          description: Requested Asset Administration Shells
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAssetAdministrationShellsResult"
        "400":
          $ref: "#/components/responses/bad-request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal-server-error"
        default:
          $ref: "#/components/responses/default"
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellsByQuery/3/1
components:
  schemas:
    #
    # NEW
    #
    GetAssetAdministrationShellsResult:
      allOf:
      - $ref: "#/components/schemas/PagedResult"
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: "#/components/schemas/AssetAdministrationShell"
    QueryExpressionString:
      type: string
      minLength: 2
      maxLength: 2048
    #
    # QUERY fron JSON
    #
    QueryExpression:
      type: object
      properties:
        $select:
          type: string
          pattern: ^id$
        $condition:
          $ref: "#/components/schemas/LogicalExpression"
      required:
        - $condition
      additionalProperties: false

    DefAttributes:
      type: object
      properties:
        name:
          type: string
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/AttributeItem"
      required:
        - name
        - attributes
      additionalProperties: false

    DefACLs:
      type: object
      properties:
        name:
          type: string
        acl:
          $ref: "#/components/schemas/ACL"
      required:
        - name
        - acl
      additionalProperties: false
    
    DefObjects:
      type: object
      properties:
        name:
          type: string
        objects:
          type: array
          items:
            $ref: "#/components/schemas/ObjectItem"
        USEOBJECTS:
          type: array
          items:
            type: string
      required:
        - name
      oneOf:
        - required:
            - objects
        - required:
            - USEOBJECTS
      additionalProperties: false

    DefFormulas:
      type: object
      properties:
        name:
          type: string
        formula:
          $ref: "#/components/schemas/LogicalExpression"
      required:
        - name
        - formula
      additionalProperties: false

    AllAccessPermissionRules:
      type: object
      properties:
        DefAttributes:
          type: array
          items:
            $ref: "#/components/schemas/DefAttributes"          
        DefACLs:
          type: array
          items:
            $ref: "#/components/schemas/DefACLs"
        DefObjects:
          type: array
          items:
            $ref: "#/components/schemas/DefObjects"
        DefFormulas:
          type: array
          items:
            $ref: "#/components/schemas/DefFormulas"
        rules:
          type: array
          items:
            $ref: "#/components/schemas/AccessPermissionRule"
      required:
        - rules
      additionalProperties: false

    QueryLanguageDocument:
      type: object
      properties:
        Query:
          $ref: "#/components/schemas/QueryExpression"
        AllAccessPermissionRules:
          $ref: "#/components/schemas/AllAccessPermissionRules"
      oneOf:
        - required:
            - Query
        - required:
            - AllAccessPermissionRules
      additionalProperties: false
    #
    # DEFINITIONS
    #
    StandardString:
      type: string
      pattern: ^(?!\$).*
    ModelStringPattern:
      type: string
      pattern: |
        ^((?:\$aas#(?:idShort|id|assetInformation\.assetKind|assetInformation\.assetType|assetInformation\.globalAssetId|assetInformation\.(?:specificAssetIds  (\[[0-9]*\])(?:\.(?:name|value|externalSubjectId(?:\.type|\.keys\[\d*\](?:\.(?:type|value))?)?)?)|submodels\.(?:type|keys\[\d*\](?:\.(?:type|value))?))|  submodels\.(type|keys\[\d*\](?:\.(type|value))?)))|(?:\$sm#(?:semanticId(?:\.type|\.keys\[\d*\](?:\.(type|value))?)?|idShort|id))|(?:\$sme(?:\.[a-zA-Z][a-zA-  Z0-9_]*(\[[0-9]*\])?(?:\.[a-zA-Z][a-zA-Z0-9_]*(\[[0-9]*\])?)*)?#(?:semanticId(?:\.type|\.keys\[\d*\](?:\.(type|value))?)?|idShort|value|valueType|language))|  (?:\$cd#(?:idShort|id))|(?:\$aasdesc#(?:idShort|id|assetKind|assetType|globalAssetId|specificAssetIds(\[[0-9]*\])?(?:\.(name|value|externalSubjectId(?:\. type| \.keys\[\d*\](?:\.(type|value))?)?)?)|endpoints(\[[0-9]*\])\.(interface|protocolinformation\.href)|submodelDescriptors(\[[0-9]*\])\.(semanticId(?: \.type|\.keys \[\d*\](?:\.(type|value))?)?|idShort|id|endpoints(\[[0-9]*\])\.(interface|protocolinformation\.href))))|(?:\$smdesc#(?:semanticId(?:\.type| \.keys\[\d*\](?:\. (type|value))?)?|idShort|id|endpoints(\[[0-9]*\])\.(interface|protocolinformation\.href))))$
    HexLiteralPattern:
      type: string
      pattern: ^16#[0-9A-F]+$
    DateTimeLiteralPattern:
      type: string
      format: date-time
    TimeLiteralPattern:
      type: string
      pattern: ^[0-9][0-9]:[0-9][0-9](:[0-9][0-9])?$
    Value:
      type: object
      properties:
        $field:
          $ref: "#/components/schemas/ModelStringPattern"
        $strVal:
          $ref: "#/components/schemas/StandardString"
        $attribute:
          $ref: "#/components/schemas/AttributeItem"
        $numVal:
          type: number
        $hexVal:
          $ref: "#/components/schemas/HexLiteralPattern"
        $dateTimeVal:
          $ref: "#/components/schemas/DateTimeLiteralPattern"
        $timeVal:
          $ref: "#/components/schemas/TimeLiteralPattern"
        $boolean:
          type: boolean
        $strCast:
          $ref: "#/components/schemas/Value"
        $numCast:
          $ref: "#/components/schemas/Value"
        $hexCast:
          $ref: "#/components/schemas/Value"
        $boolCast:
          $ref: "#/components/schemas/Value"
        $dateTimeCast:
          $ref: "#/components/schemas/Value"
        $timeCast:
          $ref: "#/components/schemas/Value"
        $dayOfWeek:
          $ref: "#/components/schemas/DateTimeLiteralPattern"
        $dayOfMonth:
          $ref: "#/components/schemas/DateTimeLiteralPattern"
        $month:
          $ref: "#/components/schemas/DateTimeLiteralPattern"
        $year:
          $ref: "#/components/schemas/DateTimeLiteralPattern"
      oneOf:
        - required:
            - $field
        - required:
            - $strVal
        - required:
            - $attribute
        - required:
            - $numVal
        - required:
            - $hexVal
        - required:
            - $dateTimeVal
        - required:
            - $timeVal
        - required:
            - $boolean
        - required:
            - $strCast
        - required:
            - $numCast
        - required:
            - $hexCast
        - required:
            - $boolCast
        - required:
            - $dateTimeCast
        - required:
            - $timeCast
        - required:
            - $dayOfWeek
        - required:
            - $dayOfMonth
        - required:
            - $month
        - required:
            - $year
      additionalProperties: false
    StringValue:
      type: object
      properties:
        $field:
          $ref: "#/components/schemas/ModelStringPattern"
        $strVal:
          $ref: "#/components/schemas/StandardString"
        $strCast:
          $ref: "#/components/schemas/Value"
        $attribute:
          $ref: "#/components/schemas/AttributeItem"
      oneOf:
        - required:
            - $field
        - required:
            - $strVal
        - required:
            - $strCast
        - required:
            - $attribute
      additionalProperties: false
    ComparisonItems:
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: "#/components/schemas/Value"
    StringItems:
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: "#/components/schemas/StringValue"
    MatchExpression:
      type: object
      properties:
        $match:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/MatchExpression"
        $eq:
          $ref: "#/components/schemas/ComparisonItems"
        $ne:
          $ref: "#/components/schemas/ComparisonItems"
        $gt:
          $ref: "#/components/schemas/ComparisonItems"
        $ge:
          $ref: "#/components/schemas/ComparisonItems"
        $lt:
          $ref: "#/components/schemas/ComparisonItems"
        $le:
          $ref: "#/components/schemas/ComparisonItems"
        $contains:
          $ref: "#/components/schemas/StringItems"
        $starts-with:
          $ref: "#/components/schemas/StringItems"
        $ends-with:
          $ref: "#/components/schemas/StringItems"
        $regex:
          $ref: "#/components/schemas/StringItems"
        $boolean:
          type: boolean
      oneOf:
        - required:
            - $eq
        - required:
            - $ne
        - required:
            - $gt
        - required:
            - $ge
        - required:
            - $lt
        - required:
            - $le
        - required:
            - $contains
        - required:
            - $starts-with
        - required:
            - $ends-with
        - required:
            - $regex
        - required:
            - $boolean
        - required:
            - $match
      additionalProperties: false
    LogicalExpression:
      type: object
      properties:
        $and:
          type: array
          minItems: 2
          items:
            $ref: "#/components/schemas/LogicalExpression"
        $match:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/MatchExpression"
        $or:
          type: array
          minItems: 2
          items:
            $ref: "#/components/schemas/LogicalExpression"
        $not:
          $ref: "#/components/schemas/LogicalExpression"
        $eq:
          $ref: "#/components/schemas/ComparisonItems"
        $ne:
          $ref: "#/components/schemas/ComparisonItems"
        $gt:
          $ref: "#/components/schemas/ComparisonItems"
        $ge:
          $ref: "#/components/schemas/ComparisonItems"
        $lt:
          $ref: "#/components/schemas/ComparisonItems"
        $le:
          $ref: "#/components/schemas/ComparisonItems"
        $contains:
          $ref: "#/components/schemas/StringItems"
        $starts-with:
          $ref: "#/components/schemas/StringItems"
        $ends-with:
          $ref: "#/components/schemas/StringItems"
        $regex:
          $ref: "#/components/schemas/StringItems"
        $boolean:
          type: boolean
      oneOf:
        - required:
            - $and
        - required:
            - $or
        - required:
            - $not
        - required:
            - $eq
        - required:
            - $ne
        - required:
            - $gt
        - required:
            - $ge
        - required:
            - $lt
        - required:
            - $le
        - required:
            - $contains
        - required:
            - $starts-with
        - required:
            - $ends-with
        - required:
            - $regex
        - required:
            - $boolean
        - required:
            - $match
      additionalProperties: false
    AttributeItem:
      oneOf:
        - required:
            - claim
        - required:
            - global
        - required:
            - reference
      properties:
        claim:
          type: string
        global:
          type: string
          enum:
            - LocalNow
            - UtcNow
            - ClientNow
            - Anonymous
        reference:
          type: string
      additionalProperties: false
    ObjectItem:
      oneOf:
        - required:
            - route
        - required:
            - identifiable
        - required:
            - referable
        - required:
            - fragment
        - required:
            - descriptor
      properties:
        route:
          type: string
        identifiable:
          type: string
        referable:
          type: string
        fragment:
          type: string
        descriptor:
          type: string
      additionalProperties: false
    RightsEnum:
      type: string
      enum:
        - Create
        - Read
        - Update
        - Delete
        - Execute
        - View
        - All
        - Tree
      additionalProperties: false
    ACL:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/AttributeItem"
        useAttributes:
          type: string
        rights:
          type: array
          items:
            $ref: "#/components/schemas/RightsEnum"
        access:
          type: string
          enum:
            - Allow
            - Disabled
      required:
        - rights
        - access
      oneOf:
        - required:
            - attributes
        - required:
            - useAttributes
      additionalProperties: false
    AccessPermissionRule:
      type: object
      properties:
        acl:
          $ref: "#/components/schemas/ACL"
        useAcl:
          type: string
        objects:
          type: array
          items:
            $ref: "#/components/schemas/ObjectItem"
          additionalProperties: false
        useObjects:
          type: array
          items:
            type: string
        formula:
          $ref: "#/components/schemas/LogicalExpression"
          additionalProperties: false
        useFormula:
          type: string
        fragment:
          type: string
        filter:
          $ref: "#/components/schemas/LogicalExpression"
          additionalProperties: false
        useFilter:
          type: string
      # after consulting with ChatGPT and Copilot
      allOf:
      - oneOf:
          - required: 
            - acl
          - required: 
            - useAcl
      - oneOf:
          - required: 
            - formula
          - required: 
            - useFormula
      - oneOf:
          - required: 
            - objects
          - required: 
            - useObjects

      additionalProperties: false

    #
    # OLD
    #
    AssetAdministrationShell:
      allOf:
      - $ref: "#/components/schemas/Identifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - required:
        - assetInformation
        properties:
          derivedFrom:
            $ref: "#/components/schemas/Reference"
          assetInformation:
            $ref: "#/components/schemas/AssetInformation"
          submodels:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/Reference"
          modelType:
            pattern: ^AssetAdministrationShell$
    Identifiable:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - required:
        - id
        properties:
          administration:
            $ref: "#/components/schemas/AdministrativeInformation"
          id:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
    Referable:
      allOf:
      - $ref: "#/components/schemas/HasExtensions"
      - required:
        - modelType
        properties:
          category:
            maxLength: 128
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          idShort:
            type: string
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^[a-zA-Z][a-zA-Z0-9_-]*[a-zA-Z0-9_]+$"
          displayName:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/LangStringNameType"
          description:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/LangStringTextType"
          modelType:
            $ref: "#/components/schemas/ModelType"
    HasExtensions:
      type: object
      properties:
        extensions:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Extension"
    Extension:
      allOf:
      - $ref: "#/components/schemas/HasSemantics"
      - required:
        - name
        properties:
          name:
            maxLength: 128
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueType:
            $ref: "#/components/schemas/DataTypeDefXsd"
          value:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          refersTo:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/Reference"
    HasSemantics:
      type: object
      properties:
        semanticId:
          $ref: "#/components/schemas/Reference"
        supplementalSemanticIds:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Reference"
    Reference:
      allOf:
      - $ref: "#/components/schemas/ReferenceParent"
      - properties:
          referredSemanticId:
            $ref: "#/components/schemas/ReferenceParent"
    ReferenceParent:
      required:
      - keys
      - type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/ReferenceTypes"
        keys:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Key"
    ReferenceTypes:
      type: string
      enum:
      - ExternalReference
      - ModelReference
    Key:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: "#/components/schemas/KeyTypes"
        value:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
    KeyTypes:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataElement
      - Entity
      - EventElement
      - File
      - FragmentReference
      - GlobalReference
      - Identifiable
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - Referable
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
    DataTypeDefXsd:
      type: string
      enum:
      - xs:anyURI
      - xs:base64Binary
      - xs:boolean
      - xs:byte
      - xs:date
      - xs:dateTime
      - xs:decimal
      - xs:double
      - xs:duration
      - xs:float
      - xs:gDay
      - xs:gMonth
      - xs:gMonthDay
      - xs:gYear
      - xs:gYearMonth
      - xs:hexBinary
      - xs:int
      - xs:integer
      - xs:long
      - xs:negativeInteger
      - xs:nonNegativeInteger
      - xs:nonPositiveInteger
      - xs:positiveInteger
      - xs:short
      - xs:string
      - xs:time
      - xs:unsignedByte
      - xs:unsignedInt
      - xs:unsignedLong
      - xs:unsignedShort
    LangStringNameType:
      allOf:
      - $ref: "#/components/schemas/AbstractLangString"
      - properties:
          text:
            maxLength: 128
    AbstractLangString:
      required:
      - language
      - text
      type: object
      properties:
        language:
          pattern: "^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
          type: string
        text:
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
    LangStringTextType:
      allOf:
      - $ref: "#/components/schemas/AbstractLangString"
      - properties:
          text:
            maxLength: 1023
    ModelType:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataSpecificationIec61360
      - Entity
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElementCollection
      - SubmodelElementList
    AdministrativeInformation:
      allOf:
      - $ref: "#/components/schemas/HasDataSpecification"
      - properties:
          version:
            type: string
            allOf:
            - maxLength: 4
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^(0|[1-9][0-9]*)$"
          revision:
            type: string
            allOf:
            - maxLength: 4
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^(0|[1-9][0-9]*)$"
          creator:
            $ref: "#/components/schemas/Reference"
          templateId:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
    HasDataSpecification:
      type: object
      properties:
        embeddedDataSpecifications:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/EmbeddedDataSpecification"
    EmbeddedDataSpecification:
      required:
      - dataSpecification
      - dataSpecificationContent
      type: object
      properties:
        dataSpecificationContent:
          $ref: "#/components/schemas/DataSpecificationContent_choice"
        dataSpecification:
          $ref: "#/components/schemas/Reference"
    DataSpecificationContent_choice:
      oneOf:
      - $ref: "#/components/schemas/DataSpecificationIec61360"
    DataSpecificationIec61360:
      allOf:
      - $ref: "#/components/schemas/DataSpecificationContent"
      - required:
        - preferredName
        properties:
          preferredName:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/LangStringPreferredNameTypeIec61360"
          shortName:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/LangStringShortNameTypeIec61360"
          unit:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          unitId:
            $ref: "#/components/schemas/Reference"
          sourceOfDefinition:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          symbol:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          dataType:
            $ref: "#/components/schemas/DataTypeIec61360"
          definition:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/LangStringDefinitionTypeIec61360"
          valueFormat:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueList:
            $ref: "#/components/schemas/ValueList"
          value:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          levelType:
            $ref: "#/components/schemas/LevelType"
          modelType:
            pattern: ^DataSpecificationIec61360$
    DataSpecificationContent:
      required:
      - modelType
      type: object
      properties:
        modelType:
          $ref: "#/components/schemas/ModelType"
    LangStringPreferredNameTypeIec61360:
      allOf:
      - $ref: "#/components/schemas/AbstractLangString"
      - properties:
          text:
            maxLength: 255
    LangStringShortNameTypeIec61360:
      allOf:
      - $ref: "#/components/schemas/AbstractLangString"
      - properties:
          text:
            maxLength: 18
    DataTypeIec61360:
      type: string
      enum:
      - BLOB
      - BOOLEAN
      - DATE
      - FILE
      - HTML
      - INTEGER_COUNT
      - INTEGER_CURRENCY
      - INTEGER_MEASURE
      - IRDI
      - IRI
      - RATIONAL
      - RATIONAL_MEASURE
      - REAL_COUNT
      - REAL_CURRENCY
      - REAL_MEASURE
      - STRING
      - STRING_TRANSLATABLE
      - TIME
      - TIMESTAMP
    LangStringDefinitionTypeIec61360:
      allOf:
      - $ref: "#/components/schemas/AbstractLangString"
      - properties:
          text:
            maxLength: 1023
    ValueList:
      required:
      - valueReferencePairs
      type: object
      properties:
        valueReferencePairs:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/ValueReferencePair"
    ValueReferencePair:
      required:
      - value
      type: object
      properties:
        value:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueId:
          $ref: "#/components/schemas/Reference"
    LevelType:
      required:
      - max
      - min
      - nom
      - typ
      type: object
      properties:
        min:
          type: boolean
        nom:
          type: boolean
        typ:
          type: boolean
        max:
          type: boolean
    AssetInformation:
      required:
      - assetKind
      type: object
      properties:
        assetKind:
          $ref: "#/components/schemas/AssetKind"
        globalAssetId:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        specificAssetIds:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/SpecificAssetId"
        assetType:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        defaultThumbnail:
          $ref: "#/components/schemas/Resource"
    AssetKind:
      type: string
      enum:
      - Instance
      - NotApplicable
      - Role
      - Type
    SpecificAssetId:
      allOf:
      - $ref: "#/components/schemas/HasSemantics"
      - required:
        - name
        - value
        properties:
          name:
            maxLength: 64
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          value:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          externalSubjectId:
            $ref: "#/components/schemas/Reference"
    Resource:
      required:
      - path
      type: object
      properties:
        path:
          type: string
          allOf:
          - maxLength: 2048
            minLength: 1
          - pattern: "^([a-zA-Z][a-zA-Z0-9+\\-.]*:((//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;?:@&=+$,])(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)|(//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;@&=+$,])+(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?)?(#(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?$"
        contentType:
          type: string
          allOf:
          - maxLength: 128
            minLength: 1
          - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\\t !-~]|[\\x80-\\xff]))*\"))*$"
    Result:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    Message:
      type: object
      properties:
        code:
          maxLength: 32
          minLength: 1
          type: string
        correlationId:
          maxLength: 128
          minLength: 1
          type: string
        messageType:
          type: string
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
        text:
          type: string
        timestamp:
          pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\.[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
          type: string
    GetReferencesResult:
      allOf:
      - $ref: "#/components/schemas/PagedResult"
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: "#/components/schemas/Reference"
    PagedResult:
      required:
      - paging_metadata
      type: object
      properties:
        paging_metadata:
          $ref: "#/components/schemas/PagedResult_paging_metadata"
    Submodel:
      allOf:
      - $ref: "#/components/schemas/Identifiable"
      - $ref: "#/components/schemas/HasKind"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - properties:
          submodelElements:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/SubmodelElement_choice"
          modelType:
            pattern: ^Submodel$
    HasKind:
      type: object
      properties:
        kind:
          $ref: "#/components/schemas/ModellingKind"
    ModellingKind:
      type: string
      enum:
      - Instance
      - Template
    Qualifiable:
      required:
      - modelType
      type: object
      properties:
        qualifiers:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Qualifier"
        modelType:
          $ref: "#/components/schemas/ModelType"
    Qualifier:
      allOf:
      - $ref: "#/components/schemas/HasSemantics"
      - required:
        - type
        - valueType
        properties:
          kind:
            $ref: "#/components/schemas/QualifierKind"
          type:
            maxLength: 128
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueType:
            $ref: "#/components/schemas/DataTypeDefXsd"
          value:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueId:
            $ref: "#/components/schemas/Reference"
    QualifierKind:
      type: string
      enum:
      - ConceptQualifier
      - TemplateQualifier
      - ValueQualifier
    SubmodelElement_choice:
      oneOf:
      - $ref: "#/components/schemas/RelationshipElement"
      - $ref: "#/components/schemas/AnnotatedRelationshipElement"
      - $ref: "#/components/schemas/BasicEventElement"
      - $ref: "#/components/schemas/Blob"
      - $ref: "#/components/schemas/Capability"
      - $ref: "#/components/schemas/Entity"
      - $ref: "#/components/schemas/File"
      - $ref: "#/components/schemas/MultiLanguageProperty"
      - $ref: "#/components/schemas/Operation"
      - $ref: "#/components/schemas/Property"
      - $ref: "#/components/schemas/Range"
      - $ref: "#/components/schemas/ReferenceElement"
      - $ref: "#/components/schemas/SubmodelElementCollection"
      - $ref: "#/components/schemas/SubmodelElementList"
    RelationshipElement:
      allOf:
      - $ref: "#/components/schemas/RelationshipElement_abstract"
      - properties:
          modelType:
            pattern: ^RelationshipElement$
    RelationshipElement_abstract:
      allOf:
      - $ref: "#/components/schemas/SubmodelElement"
      - properties:
          first:
            $ref: "#/components/schemas/Reference"
          second:
            $ref: "#/components/schemas/Reference"
    SubmodelElement:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
    AnnotatedRelationshipElement:
      allOf:
      - $ref: "#/components/schemas/RelationshipElement_abstract"
      - properties:
          annotations:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/DataElement_choice"
          modelType:
            pattern: ^AnnotatedRelationshipElement$
    DataElement_choice:
      oneOf:
      - $ref: "#/components/schemas/Blob"
      - $ref: "#/components/schemas/File"
      - $ref: "#/components/schemas/MultiLanguageProperty"
      - $ref: "#/components/schemas/Property"
      - $ref: "#/components/schemas/Range"
      - $ref: "#/components/schemas/ReferenceElement"
    Blob:
      allOf:
      - $ref: "#/components/schemas/DataElement"
      - properties:
          value:
            type: string
            format: byte
          contentType:
            type: string
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\\t !-~]|[\\x80-\\xff]))*\"))*$"
          modelType:
            pattern: ^Blob$
    DataElement:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
    File:
      allOf:
      - $ref: "#/components/schemas/DataElement"
      - properties:
          value:
            type: string
            allOf:
            - maxLength: 2048
              minLength: 1
            - pattern: "^([a-zA-Z][a-zA-Z0-9+\\-.]*:((//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;?:@&=+$,])(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)|(//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;@&=+$,])+(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?)?(#(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?$"
          contentType:
            type: string
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\\t !-~]|[\\x80-\\xff]))*\"))*$"
          modelType:
            pattern: ^File$
    MultiLanguageProperty:
      allOf:
      - $ref: "#/components/schemas/DataElement"
      - properties:
          value:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/LangStringTextType"
          valueId:
            $ref: "#/components/schemas/Reference"
          modelType:
            pattern: ^MultiLanguageProperty$
    Property:
      allOf:
      - $ref: "#/components/schemas/DataElement"
      - required:
        - valueType
        properties:
          valueType:
            $ref: "#/components/schemas/DataTypeDefXsd"
          value:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueId:
            $ref: "#/components/schemas/Reference"
          modelType:
            pattern: ^Property$
    Range:
      allOf:
      - $ref: "#/components/schemas/DataElement"
      - required:
        - valueType
        properties:
          valueType:
            $ref: "#/components/schemas/DataTypeDefXsd"
          min:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          max:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          modelType:
            pattern: ^Range$
    ReferenceElement:
      allOf:
      - $ref: "#/components/schemas/DataElement"
      - properties:
          value:
            $ref: "#/components/schemas/Reference"
          modelType:
            pattern: ^ReferenceElement$
    BasicEventElement:
      allOf:
      - $ref: "#/components/schemas/EventElement"
      - required:
        - direction
        - observed
        - state
        properties:
          observed:
            $ref: "#/components/schemas/Reference"
          direction:
            $ref: "#/components/schemas/Direction"
          state:
            $ref: "#/components/schemas/StateOfEvent"
          messageTopic:
            maxLength: 255
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          messageBroker:
            $ref: "#/components/schemas/Reference"
          lastUpdate:
            pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\.[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
            type: string
          minInterval:
            pattern: "^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S))))$"
            type: string
          maxInterval:
            pattern: "^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S))))$"
            type: string
          modelType:
            pattern: ^BasicEventElement$
    EventElement:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
    Direction:
      type: string
      enum:
      - input
      - output
    StateOfEvent:
      type: string
      enum:
      - "off"
      - "on"
    Capability:
      allOf:
      - $ref: "#/components/schemas/SubmodelElement"
      - properties:
          modelType:
            pattern: ^Capability$
    Entity:
      allOf:
      - $ref: "#/components/schemas/SubmodelElement"
      - properties:
          statements:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/SubmodelElement_choice"
          entityType:
            $ref: "#/components/schemas/EntityType"
          globalAssetId:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          specificAssetIds:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/SpecificAssetId"
          modelType:
            pattern: ^Entity$
    EntityType:
      type: string
      enum:
      - CoManagedEntity
      - SelfManagedEntity
    Operation:
      allOf:
      - $ref: "#/components/schemas/SubmodelElement"
      - properties:
          inputVariables:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/OperationVariable"
          outputVariables:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/OperationVariable"
          inoutputVariables:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/OperationVariable"
          modelType:
            pattern: ^Operation$
    OperationVariable:
      required:
      - value
      type: object
      properties:
        value:
          $ref: "#/components/schemas/SubmodelElement_choice"
    SubmodelElementCollection:
      allOf:
      - $ref: "#/components/schemas/SubmodelElement"
      - properties:
          value:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/SubmodelElement_choice"
          modelType:
            pattern: ^SubmodelElementCollection$
    SubmodelElementList:
      allOf:
      - $ref: "#/components/schemas/SubmodelElement"
      - required:
        - typeValueListElement
        properties:
          orderRelevant:
            type: boolean
          semanticIdListElement:
            $ref: "#/components/schemas/Reference"
          typeValueListElement:
            $ref: "#/components/schemas/AasSubmodelElements"
          valueTypeListElement:
            $ref: "#/components/schemas/DataTypeDefXsd"
          value:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/SubmodelElement_choice"
          modelType:
            pattern: ^SubmodelElementList$
    AasSubmodelElements:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - BasicEventElement
      - Blob
      - Capability
      - DataElement
      - Entity
      - EventElement
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
    SubmodelMetadata:
      allOf:
      - $ref: "#/components/schemas/Identifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/HasKind"
    SubmodelValue:
      type: object
      description: The ValueOnly serialization (patternProperties and propertyNames will probably be supported with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
    PathItem:
      pattern: "^(([A-Za-z][A-Za-z0-9_]+)|(\\[[0-9]+\\]))((\\.[A-Za-z][A-Za-z0-9_]+)|(\\[[0-9]+\\])){0,}$"
      type: string
    GetSubmodelElementsResult:
      allOf:
      - $ref: "#/components/schemas/PagedResult"
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: "#/components/schemas/SubmodelElement"
    GetSubmodelElementsMetadataResult:
      allOf:
      - $ref: "#/components/schemas/PagedResult"
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: "#/components/schemas/SubmodelElementMetadata"
    SubmodelElementMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
      oneOf:
      - $ref: "#/components/schemas/BlobMetadata"
      - $ref: "#/components/schemas/FileMetadata"
      - $ref: "#/components/schemas/CapabilityMetadata"
      - $ref: "#/components/schemas/EntityMetadata"
      - $ref: "#/components/schemas/BasicEventElementMetadata"
      - $ref: "#/components/schemas/MultiLanguagePropertyMetadata"
      - $ref: "#/components/schemas/OperationMetadata"
      - $ref: "#/components/schemas/PropertyMetadata"
      - $ref: "#/components/schemas/RangeMetadata"
      - $ref: "#/components/schemas/ReferenceElementMetadata"
      - $ref: "#/components/schemas/AnnotatedRelationshipElementMetadata"
      - $ref: "#/components/schemas/RelationshipElementMetadata"
      - $ref: "#/components/schemas/SubmodelElementListMetadata"
      - $ref: "#/components/schemas/SubmodelElementCollectionMetadata"
    SubmodelElementAttributes:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasKind"
    BlobMetadata:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasKind"
    FileMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    CapabilityMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    EntityMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    BasicEventElementMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
      - properties:
          direction:
            $ref: "#/components/schemas/Direction"
          state:
            $ref: "#/components/schemas/StateOfEvent"
          messageTopic:
            maxLength: 255
            type: string
          messageBroker:
            $ref: "#/components/schemas/Reference"
          lastUpdate:
            type: string
          minInterval:
            type: string
          maxInterval:
            type: string
    MultiLanguagePropertyMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    OperationMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    PropertyMetadata:
      properties:
        valueType:
          $ref: "#/components/schemas/DataTypeDefXsd"
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    RangeMetadata:
      properties:
        valueType:
          $ref: "#/components/schemas/DataTypeDefXsd"
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    ReferenceElementMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    AnnotatedRelationshipElementMetadata:
      allOf:
      - $ref: "#/components/schemas/Referable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - $ref: "#/components/schemas/HasSemantics"
      - $ref: "#/components/schemas/Qualifiable"
      - $ref: "#/components/schemas/HasKind"
    RelationshipElementMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    SubmodelElementListMetadata:
      properties:
        orderRelevant:
          type: boolean
        semanticIdListElement:
          $ref: "#/components/schemas/Reference"
        typeValueListElement:
          $ref: "#/components/schemas/ModelType"
        valueTypeListElement:
          $ref: "#/components/schemas/DataTypeDefXsd"
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    SubmodelElementCollectionMetadata:
      allOf:
      - $ref: "#/components/schemas/SubmodelElementAttributes"
    GetSubmodelElementsValueResult:
      allOf:
      - $ref: "#/components/schemas/PagedResult"
      - type: object
        properties:
          result:
            type: object
            description: "Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value."
    GetPathItemsResult:
      allOf:
      - $ref: "#/components/schemas/PagedResult"
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: "#/components/schemas/PathItem"
    SubmodelElementValue:
      oneOf:
      - $ref: "#/components/schemas/BasicEventElementValue"
      - $ref: "#/components/schemas/PropertyValue"
      - $ref: "#/components/schemas/MultiLanguagePropertyValue"
      - $ref: "#/components/schemas/BlobValue"
      - $ref: "#/components/schemas/FileValue"
      - $ref: "#/components/schemas/RangeValue"
      - $ref: "#/components/schemas/ReferenceElementValue"
      - $ref: "#/components/schemas/RelationshipElementValue"
      - $ref: "#/components/schemas/AnnotatedRelationshipElementValue"
      - $ref: "#/components/schemas/EntityValue"
      - $ref: "#/components/schemas/SubmodelElementCollectionValue"
      - $ref: "#/components/schemas/SubmodelElementListValue"
    BasicEventElementValue:
      required:
      - observed
      type: object
      properties:
        observed:
          $ref: "#/components/schemas/ReferenceValue"
    ReferenceValue:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/ReferenceTypes"
        keys:
          type: array
          items:
            $ref: "#/components/schemas/Key"
    PropertyValue:
      oneOf:
      - $ref: "#/components/schemas/StringValue"
      - $ref: "#/components/schemas/NumberValue"
      - $ref: "#/components/schemas/BooleanValue"
    StringValue:
      type: string
    NumberValue:
      type: number
    BooleanValue:
      type: boolean
    MultiLanguagePropertyValue:
      type: object
      description: "Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value."
    BlobValue:
      type: object
      properties:
        contentType:
          maxLength: 128
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    FileValue:
      type: object
      properties:
        contentType:
          maxLength: 128
          minLength: 1
          type: string
        value:
          maxLength: 2048
          minLength: 1
          type: string
    RangeValue:
      required:
      - max
      - min
      type: object
      properties:
        max:
          type: number
        min:
          type: number
    ReferenceElementValue:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/ReferenceTypes"
        keys:
          type: array
          items:
            $ref: "#/components/schemas/Key"
    RelationshipElementValue:
      type: object
      properties:
        first:
          $ref: "#/components/schemas/ReferenceValue"
        second:
          $ref: "#/components/schemas/ReferenceValue"
    AnnotatedRelationshipElementValue:
      type: object
      properties:
        first:
          $ref: "#/components/schemas/ReferenceValue"
        second:
          $ref: "#/components/schemas/ReferenceValue"
        annotations:
          $ref: "#/components/schemas/ValueOnly"
    ValueOnly:
      type: object
      description: The ValueOnly serialization (patternProperties and propertyNames will probably be supported with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
    EntityValue:
      type: object
      properties:
        entityType:
          $ref: "#/components/schemas/EntityType"
        globalAssetId:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\\\x09\\\\x0a\\\\x0d\\\\x20-\\\\ud7ff\\\\ue000-\\\\ufffd]|\\\\ud800[\\\\udc00-\\\\udfff]|[\\\\ud801-\\\\udbfe][\\\\udc00-\\\\udfff]|\\\\udbff[\\\\udc00-\\\\udfff])*$"
          type: string
        specificAssetIds:
          type: array
          items:
            $ref: "#/components/schemas/SpecificAssetIdValue"
        statements:
          $ref: "#/components/schemas/ValueOnly"
    SpecificAssetIdValue:
      type: object
      description: "Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value."
    SubmodelElementCollectionValue:
      type: object
      description: The ValueOnly serialization (patternProperties and propertyNames will probably be supported with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
    SubmodelElementListValue:
      type: array
      items:
        $ref: "#/components/schemas/SubmodelElementValue"
    OperationRequest:
      type: object
      properties:
        inoutputArguments:
          type: array
          items:
            $ref: "#/components/schemas/OperationVariable"
        inputArguments:
          type: array
          items:
            $ref: "#/components/schemas/OperationVariable"
        clientTimeoutDuration:
          pattern: ^(-?)P(?=.)((\d+)Y)?((\d+)M)?((\d+)D)?(T(?=.)((\d+)H)?((\d+)M)?(\d*(\.\d+)?S)?)?$
          type: string
    OperationResult:
      type: object
      allOf:
      - $ref: "#/components/schemas/BaseOperationResult"
      - properties:
          inoutputArguments:
            type: array
            items:
              $ref: "#/components/schemas/OperationVariable"
          outputArguments:
            type: array
            items:
              $ref: "#/components/schemas/OperationVariable"
    BaseOperationResult:
      allOf:
      - $ref: "#/components/schemas/Result"
      - properties:
          executionState:
            $ref: "#/components/schemas/ExecutionState"
          success:
            type: boolean
    ExecutionState:
      type: string
      enum:
      - Initiated
      - Running
      - Completed
      - Canceled
      - Failed
      - Timeout
    OperationRequestValueOnly:
      required:
      - clientTimeoutDuration
      type: object
      properties:
        inoutputArguments:
          $ref: "#/components/schemas/ValueOnly"
        inputArguments:
          $ref: "#/components/schemas/ValueOnly"
        clientTimeoutDuration:
          pattern: ^(-?)P(?=.)((\d+)Y)?((\d+)M)?((\d+)D)?(T(?=.)((\d+)H)?((\d+)M)?(\d*(\.\d+)?S)?)?$
          type: string
    OperationResultValueOnly:
      type: object
      allOf:
      - $ref: "#/components/schemas/BaseOperationResult"
      - properties:
          inoutputArguments:
            $ref: "#/components/schemas/ValueOnly"
          outputArguments:
            $ref: "#/components/schemas/ValueOnly"
    Environment:
      type: object
      properties:
        assetAdministrationShells:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/AssetAdministrationShell"
        submodels:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Submodel"
        conceptDescriptions:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/ConceptDescription"
    ConceptDescription:
      allOf:
      - $ref: "#/components/schemas/Identifiable"
      - $ref: "#/components/schemas/HasDataSpecification"
      - properties:
          isCaseOf:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/Reference"
          modelType:
            pattern: ^ConceptDescription$
    ServiceDescription:
      type: object
      properties:
        profiles:
          minItems: 1
          type: array
          items:
            type: string
            example: "[\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/AasxFileServerServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AasxFileServerServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-005\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/DiscoveryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/DiscoveryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/DiscoveryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-005\",\"https://admin-shell.io/aas/API/3/1/ConceptDescriptionRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/ConceptDescriptionRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/ConceptDescriptionRepositoryServiceSpecification/SSP-002\"]"
      description: "The Description object enables servers to present their capabilities to the clients, in particular which profiles they implement. At least one defined profile is required. Additional, proprietary attributes might be included. Nevertheless, the server must not expect that a regular client understands them."
      example: |-
        {
          "profiles": [
            "https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-002",
            "https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-002"
          ]
        }
    assetinformation_thumbnail_body:
      type: object
      properties:
        fileName:
          type: string
        file:
          type: string
          format: binary
    idShortPath_attachment_body:
      type: object
      properties:
        fileName:
          type: string
        file:
          type: string
          format: binary
    PagedResult_paging_metadata:
      type: object
      properties:
        cursor:
          type: string
          example: wJlCDLIl6KTWypN7T6vc6nWEmEYe99Hjf1XY1xmqV-M=#
  responses:
    bad-request:
      description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    unauthorized:
      description: "Unauthorized, e.g. the server refused the authorization attempt."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    internal-server-error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    default:
      description: Default error handling for unmentioned status codes
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    not-found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    no-content:
      description: "No Content, request was successful but no content is returned"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AssetAdministrationShell"
    conflict:
      description: "Conflict, a resource which shall be created exists already. Might be thrown if an object with the same id (for Identifiables) or idShort (for Referables within the same Container Element or Submodel) is contained in a POST request."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    accepted:
      description: The server has accepted the request.
      headers:
        Location:
          description: The URL where the client can find more information about the request.
          schema:
            type: string
    found:
      description: The target resource is available but at a different location.
      headers:
        Location:
          description: The URL where the client can find the target resource.
          schema:
            type: string
  parameters:
    Limit:
      name: limit
      in: query
      description: The maximum number of elements in the response array
      required: false
      schema:
        minimum: 1
        type: integer
    Cursor:
      name: cursor
      in: query
      description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
      required: false
      schema:
        type: string
    SubmodelIdentifier:
      name: submodelIdentifier
      in: path
      description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Level:
      name: level
      in: query
      description: Determines the structural depth of the respective resource content
      required: false
      schema:
        type: string
        default: deep
        enum:
        - deep
        - core
    Extent:
      name: extent
      in: query
      description: Determines to which extent the resource is being serialized
      required: false
      schema:
        type: string
        default: withoutBlobValue
        enum:
        - withBlobValue
        - withoutBlobValue
    IdShortPath:
      name: idShortPath
      in: path
      description: IdShort path to the submodel element (dot-separated)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AssetAdministrationShellIdentifier:
      name: aasIdentifier
      in: path
      description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    HandleId:
      name: handleId
      in: path
      description: The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
